package com.dixond.events{	import flash.events.Event;	/**	LogEvent - Events dispatched from the com.dixond.Logger class   *	updates:   *	* 2011-07-08   *		== attempt to log objects directly (instead of string representations) for views that support that (e.g. AirLogger)   *		== changed aMsg:Object to aOb:Object	*/	public class LogEvent extends Event {		public static const UPDATE:String = "update";		private var _message:*;		private var _level:Number;		public function LogEvent(aType:String, aLevel:Number, aOb:*) {			// trace("LogEvent()-", aOb, "is string:", aOb is String);						super(aType, false);			_message = aOb; // + "\n";			_level = aLevel;		}		// public function LogEvent(aType:String, aLevel:Number, aMsg:String) {		// 	super(aType, false);		// 	_message = aMsg + "\n";		// 	_level = aLevel;		// }		public function get level():Number {			return _level;		}		public function get message():* {			return _message		}		/**		* @inheritDoc		*/		public override function clone():Event {			return new LogEvent(type, _level, _message);		}		/**		* @inheritDoc		*/		public override function toString():String {			var str = super.toString();			// note this string does not include all the inherited Event properties that might be useful...			//return "[Event type=" + type + " selected=" + _selected + "]";			return formatToString("LogEvent","type", "target", "message", "level");		}		// end class	}	// end package}