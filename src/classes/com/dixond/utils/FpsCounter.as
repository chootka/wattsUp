package com.dixond.utils {/** * @name:   	FpsCounter * @author: 	d. dixon* @date:   	some time in 2007* @desc:   	FpsCounter Class:* 		displays textfield with the current actual FPS and the average FPS over a specified period of seconds * 		no textFormats used because it cost cpu time to render the font*		field can be turned on or off via show() & hide() funcs. No calculations, timer events or enterframe events occur when hidden.** * history== Added a background to the textfield so we could see it over dark content.== futzed w the field size. May even make these params. So we can place it where needed.== added commands to show and hide. Counter doesn't calculate when hidden.== May make this a static function too (to make/show and kill it), so we don't need to instantiate it via constructor call== 4.13.07 - Replaced startFrameCount() with a Constructor method so now textfield is created when we instantiate. Actual counting doesn't happen until we call show(). == 5.13.07 - added toggleVisible(), added x, y to constructor for easy placement. Set panel size to 50.*	11.7.07 - AS3 update. Also made it a singleton w some static methods. Just call init() to initialize. Don't need to store a ref to it.*	3.17.08 - changed calculation method. Now reports the total enterframes per second and the average fps over a specified amt of seconds. */	import flash.display.Stage;	import flash.text.TextField;	import flash.events.Event;	import flash.events.TimerEvent;	import flash.display.*;	import flash.utils.Timer;	import com.dixond.utils.Textd;	import com.dixond.utils.Mathd;		// extends MovieClip because we use the EnterFrame event.	public class FpsCounter extends MovieClip {		private var _w:Number = 105;		private var _h:Number = 20;		private var _field:TextField;		private var _container:DisplayObjectContainer;		private var _stage:Stage;		private var _timer:Timer;		private var _frameCount:Number = 0;		// num of seconds to include in average		private var _secondsToAvg:Number;		private var _avgArray:Array;						private static var _instance:FpsCounter;						// This is intended as a Singleton, so call the constructor. Call init to create it.		public function FpsCounter(aStageRef:Stage, aContainer:DisplayObjectContainer, x:Number, y:Number, aSecondsToAvg:Number = 5) {			_stage = aStageRef;			_container = aContainer;			_secondsToAvg = aSecondsToAvg;			_avgArray = [];			this.x = x;			this.y = y;			_field = Textd.makeTextField("fpsTextfield", 0, 0, _w, _h);			_field.border = true;			_field.background = true;			_field.backgroundColor = 0xffffff;			this.addChild(_field);						_timer = new Timer(1000);			_timer.addEventListener(TimerEvent.TIMER, timerListener);		}		public static function init(aStageRef:Stage, aContainer:DisplayObjectContainer, x:Number, y:Number, aSecondsToAvg:Number = 5) {			if (_instance == null) {				_instance = new FpsCounter(aStageRef, aContainer, x, y);			}		}		public static function hide() {			if (_instance._container.contains(_instance)) {				_instance._container.removeChild(_instance);				_instance.deactivate();			}		}		public static function show() {			trace("fps.show(), _instance=" + _instance, "container ="+ _instance._container);			_instance._container.addChild(_instance);			 trace("fps.show() 2" );			_instance.activate();		}		public static function toggle() {			if (_instance._container.contains(_instance) ) {				FpsCounter.hide();			} else {				FpsCounter.show();			}		}		private function activate() {			_timer.start();			_stage.addEventListener(Event.ENTER_FRAME, enterFrameListener, false, 0, true);			_frameCount = 0;		}		private function deactivate() {			_timer.stop();			_stage.removeEventListener(Event.ENTER_FRAME, enterFrameListener, false);		}		private function enterFrameListener(aEvent:Event) {			_frameCount ++;					}		private function timerListener(aEvent:TimerEvent) {			// add this frameCount to the end of array, if the array is "full", remove the oldest(first) item.			_avgArray.push(_frameCount);			if (_avgArray.length > _secondsToAvg) {				_avgArray.shift();			}			// calc the avg frame rate for the last x seconds			var avg:int = Mathd.average(_avgArray);			// display the frame count and avg for this second			_field.text = "FPS: " + _frameCount + "   " + "AVG: " + avg ;			_frameCount = 0		}	}// end class} //end package